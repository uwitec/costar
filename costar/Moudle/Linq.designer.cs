#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moudle
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="costar")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppliedUpdate(AppliedUpdate instance);
    partial void UpdateAppliedUpdate(AppliedUpdate instance);
    partial void DeleteAppliedUpdate(AppliedUpdate instance);
    partial void InsertStoreVariantType(StoreVariantType instance);
    partial void UpdateStoreVariantType(StoreVariantType instance);
    partial void DeleteStoreVariantType(StoreVariantType instance);
    partial void InsertStoreAnime(StoreAnime instance);
    partial void UpdateStoreAnime(StoreAnime instance);
    partial void DeleteStoreAnime(StoreAnime instance);
    partial void InsertStoreColor(StoreColor instance);
    partial void UpdateStoreColor(StoreColor instance);
    partial void DeleteStoreColor(StoreColor instance);
    partial void InsertStoreProductColor(StoreProductColor instance);
    partial void UpdateStoreProductColor(StoreProductColor instance);
    partial void DeleteStoreProductColor(StoreProductColor instance);
    partial void InsertStoreProductInventory(StoreProductInventory instance);
    partial void UpdateStoreProductInventory(StoreProductInventory instance);
    partial void DeleteStoreProductInventory(StoreProductInventory instance);
    partial void InsertStoreProduct(StoreProduct instance);
    partial void UpdateStoreProduct(StoreProduct instance);
    partial void DeleteStoreProduct(StoreProduct instance);
    partial void InsertStoreVariantTypeOption(StoreVariantTypeOption instance);
    partial void UpdateStoreVariantTypeOption(StoreVariantTypeOption instance);
    partial void DeleteStoreVariantTypeOption(StoreVariantTypeOption instance);
    partial void InsertAccountNewsletter(AccountNewsletter instance);
    partial void UpdateAccountNewsletter(AccountNewsletter instance);
    partial void DeleteAccountNewsletter(AccountNewsletter instance);
    partial void InsertNewsLetter(NewsLetter instance);
    partial void UpdateNewsLetter(NewsLetter instance);
    partial void DeleteNewsLetter(NewsLetter instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertStoreShippingOption(StoreShippingOption instance);
    partial void UpdateStoreShippingOption(StoreShippingOption instance);
    partial void DeleteStoreShippingOption(StoreShippingOption instance);
    #endregion
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AppliedUpdate> AppliedUpdates
		{
			get
			{
				return this.GetTable<AppliedUpdate>();
			}
		}
		
		public System.Data.Linq.Table<StoreVariantType> StoreVariantTypes
		{
			get
			{
				return this.GetTable<StoreVariantType>();
			}
		}
		
		public System.Data.Linq.Table<StoreAnime> StoreAnimes
		{
			get
			{
				return this.GetTable<StoreAnime>();
			}
		}
		
		public System.Data.Linq.Table<StoreColor> StoreColors
		{
			get
			{
				return this.GetTable<StoreColor>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductColor> StoreProductColors
		{
			get
			{
				return this.GetTable<StoreProductColor>();
			}
		}
		
		public System.Data.Linq.Table<StoreProductInventory> StoreProductInventories
		{
			get
			{
				return this.GetTable<StoreProductInventory>();
			}
		}
		
		public System.Data.Linq.Table<StoreProduct> StoreProducts
		{
			get
			{
				return this.GetTable<StoreProduct>();
			}
		}
		
		public System.Data.Linq.Table<StoreVariantTypeOption> StoreVariantTypeOptions
		{
			get
			{
				return this.GetTable<StoreVariantTypeOption>();
			}
		}
		
		public System.Data.Linq.Table<AccountNewsletter> AccountNewsletters
		{
			get
			{
				return this.GetTable<AccountNewsletter>();
			}
		}
		
		public System.Data.Linq.Table<NewsLetter> NewsLetters
		{
			get
			{
				return this.GetTable<NewsLetter>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<StoreShippingOption> StoreShippingOptions
		{
			get
			{
				return this.GetTable<StoreShippingOption>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedUpdates")]
	public partial class AppliedUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UpdateID;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUpdateIDChanging(long value);
    partial void OnUpdateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public AppliedUpdate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long UpdateID
		{
			get
			{
				return this._UpdateID;
			}
			set
			{
				if ((this._UpdateID != value))
				{
					this.OnUpdateIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateID = value;
					this.SendPropertyChanged("UpdateID");
					this.OnUpdateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreVariantTypes")]
	public partial class StoreVariantType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VariantTypeID;
		
		private string _GroupName;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariantTypeIDChanging(long value);
    partial void OnVariantTypeIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreVariantType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantTypeID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long VariantTypeID
		{
			get
			{
				return this._VariantTypeID;
			}
			set
			{
				if ((this._VariantTypeID != value))
				{
					this.OnVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VariantTypeID = value;
					this.SendPropertyChanged("VariantTypeID");
					this.OnVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreAnimes")]
	public partial class StoreAnime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnimeID;
		
		private string _AnimeName;
		
		private System.Data.Linq.Binary _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimeIDChanging(int value);
    partial void OnAnimeIDChanged();
    partial void OnAnimeNameChanging(string value);
    partial void OnAnimeNameChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public StoreAnime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int AnimeID
		{
			get
			{
				return this._AnimeID;
			}
			set
			{
				if ((this._AnimeID != value))
				{
					this.OnAnimeIDChanging(value);
					this.SendPropertyChanging();
					this._AnimeID = value;
					this.SendPropertyChanged("AnimeID");
					this.OnAnimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimeName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string AnimeName
		{
			get
			{
				return this._AnimeName;
			}
			set
			{
				if ((this._AnimeName != value))
				{
					this.OnAnimeNameChanging(value);
					this.SendPropertyChanging();
					this._AnimeName = value;
					this.SendPropertyChanged("AnimeName");
					this.OnAnimeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreColors")]
	public partial class StoreColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ColorID;
		
		private string _ColorName;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorName", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductColors")]
	public partial class StoreProductColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProductID;
		
		private int _ColorID;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreProductColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProductInventories")]
	public partial class StoreProductInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _InventoryID;
		
		private long _ProductID;
		
		private int _QtyAvail;
		
		private int _QtySold;
		
		private int _QtyOnHold;
		
		private int _SortOrder;
		
		private System.Nullable<long> _Variant1OptionID;
		
		private System.Nullable<long> _Variant2OptionID;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIDChanging(long value);
    partial void OnInventoryIDChanged();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnQtyAvailChanging(int value);
    partial void OnQtyAvailChanged();
    partial void OnQtySoldChanging(int value);
    partial void OnQtySoldChanged();
    partial void OnQtyOnHoldChanging(int value);
    partial void OnQtyOnHoldChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnVariant1OptionIDChanging(System.Nullable<long> value);
    partial void OnVariant1OptionIDChanged();
    partial void OnVariant2OptionIDChanging(System.Nullable<long> value);
    partial void OnVariant2OptionIDChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreProductInventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyAvail", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int QtyAvail
		{
			get
			{
				return this._QtyAvail;
			}
			set
			{
				if ((this._QtyAvail != value))
				{
					this.OnQtyAvailChanging(value);
					this.SendPropertyChanging();
					this._QtyAvail = value;
					this.SendPropertyChanged("QtyAvail");
					this.OnQtyAvailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtySold", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int QtySold
		{
			get
			{
				return this._QtySold;
			}
			set
			{
				if ((this._QtySold != value))
				{
					this.OnQtySoldChanging(value);
					this.SendPropertyChanging();
					this._QtySold = value;
					this.SendPropertyChanged("QtySold");
					this.OnQtySoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyOnHold", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int QtyOnHold
		{
			get
			{
				return this._QtyOnHold;
			}
			set
			{
				if ((this._QtyOnHold != value))
				{
					this.OnQtyOnHoldChanging(value);
					this.SendPropertyChanging();
					this._QtyOnHold = value;
					this.SendPropertyChanged("QtyOnHold");
					this.OnQtyOnHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant1OptionID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Variant1OptionID
		{
			get
			{
				return this._Variant1OptionID;
			}
			set
			{
				if ((this._Variant1OptionID != value))
				{
					this.OnVariant1OptionIDChanging(value);
					this.SendPropertyChanging();
					this._Variant1OptionID = value;
					this.SendPropertyChanged("Variant1OptionID");
					this.OnVariant1OptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant2OptionID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Variant2OptionID
		{
			get
			{
				return this._Variant2OptionID;
			}
			set
			{
				if ((this._Variant2OptionID != value))
				{
					this.OnVariant2OptionIDChanging(value);
					this.SendPropertyChanging();
					this._Variant2OptionID = value;
					this.SendPropertyChanged("Variant2OptionID");
					this.OnVariant2OptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreProducts")]
	public partial class StoreProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProductID;
		
		private int _AnimeID;
		
		private string _ProductCode;
		
		private string _Name;
		
		private string _Description;
		
		private string _Title;
		
		private string _PageName;
		
		private bool _IsActive;
		
		private bool _IsFeatured;
		
		private string _ImageFile;
		
		private string _ImageFile2;
		
		private string _ImageFile3;
		
		private string _ImageFile4;
		
		private System.Nullable<decimal> _RetailPrice;
		
		private decimal _SalePrice;
		
		private System.Nullable<decimal> _VIPPrice;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _AddeDate;
		
		private System.Nullable<long> _Variant1TypeID;
		
		private System.Nullable<long> _Variant2TypeID;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(long value);
    partial void OnProductIDChanged();
    partial void OnAnimeIDChanging(int value);
    partial void OnAnimeIDChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsFeaturedChanging(bool value);
    partial void OnIsFeaturedChanged();
    partial void OnImageFileChanging(string value);
    partial void OnImageFileChanged();
    partial void OnImageFile2Changing(string value);
    partial void OnImageFile2Changed();
    partial void OnImageFile3Changing(string value);
    partial void OnImageFile3Changed();
    partial void OnImageFile4Changing(string value);
    partial void OnImageFile4Changed();
    partial void OnRetailPriceChanging(System.Nullable<decimal> value);
    partial void OnRetailPriceChanged();
    partial void OnSalePriceChanging(decimal value);
    partial void OnSalePriceChanged();
    partial void OnVIPPriceChanging(System.Nullable<decimal> value);
    partial void OnVIPPriceChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnAddeDateChanging(System.DateTime value);
    partial void OnAddeDateChanged();
    partial void OnVariant1TypeIDChanging(System.Nullable<long> value);
    partial void OnVariant1TypeIDChanged();
    partial void OnVariant2TypeIDChanging(System.Nullable<long> value);
    partial void OnVariant2TypeIDChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AnimeID
		{
			get
			{
				return this._AnimeID;
			}
			set
			{
				if ((this._AnimeID != value))
				{
					this.OnAnimeIDChanging(value);
					this.SendPropertyChanging();
					this._AnimeID = value;
					this.SendPropertyChanged("AnimeID");
					this.OnAnimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeatured", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFeatured
		{
			get
			{
				return this._IsFeatured;
			}
			set
			{
				if ((this._IsFeatured != value))
				{
					this.OnIsFeaturedChanging(value);
					this.SendPropertyChanging();
					this._IsFeatured = value;
					this.SendPropertyChanged("IsFeatured");
					this.OnIsFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ImageFile
		{
			get
			{
				return this._ImageFile;
			}
			set
			{
				if ((this._ImageFile != value))
				{
					this.OnImageFileChanging(value);
					this.SendPropertyChanging();
					this._ImageFile = value;
					this.SendPropertyChanged("ImageFile");
					this.OnImageFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile2", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ImageFile2
		{
			get
			{
				return this._ImageFile2;
			}
			set
			{
				if ((this._ImageFile2 != value))
				{
					this.OnImageFile2Changing(value);
					this.SendPropertyChanging();
					this._ImageFile2 = value;
					this.SendPropertyChanged("ImageFile2");
					this.OnImageFile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile3", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ImageFile3
		{
			get
			{
				return this._ImageFile3;
			}
			set
			{
				if ((this._ImageFile3 != value))
				{
					this.OnImageFile3Changing(value);
					this.SendPropertyChanging();
					this._ImageFile3 = value;
					this.SendPropertyChanged("ImageFile3");
					this.OnImageFile3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile4", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string ImageFile4
		{
			get
			{
				return this._ImageFile4;
			}
			set
			{
				if ((this._ImageFile4 != value))
				{
					this.OnImageFile4Changing(value);
					this.SendPropertyChanging();
					this._ImageFile4 = value;
					this.SendPropertyChanged("ImageFile4");
					this.OnImageFile4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="Decimal(9,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this.OnRetailPriceChanging(value);
					this.SendPropertyChanging();
					this._RetailPrice = value;
					this.SendPropertyChanged("RetailPrice");
					this.OnRetailPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(9,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIPPrice", DbType="Decimal(9,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> VIPPrice
		{
			get
			{
				return this._VIPPrice;
			}
			set
			{
				if ((this._VIPPrice != value))
				{
					this.OnVIPPriceChanging(value);
					this.SendPropertyChanging();
					this._VIPPrice = value;
					this.SendPropertyChanged("VIPPrice");
					this.OnVIPPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddeDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AddeDate
		{
			get
			{
				return this._AddeDate;
			}
			set
			{
				if ((this._AddeDate != value))
				{
					this.OnAddeDateChanging(value);
					this.SendPropertyChanging();
					this._AddeDate = value;
					this.SendPropertyChanged("AddeDate");
					this.OnAddeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant1TypeID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Variant1TypeID
		{
			get
			{
				return this._Variant1TypeID;
			}
			set
			{
				if ((this._Variant1TypeID != value))
				{
					this.OnVariant1TypeIDChanging(value);
					this.SendPropertyChanging();
					this._Variant1TypeID = value;
					this.SendPropertyChanged("Variant1TypeID");
					this.OnVariant1TypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant2TypeID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> Variant2TypeID
		{
			get
			{
				return this._Variant2TypeID;
			}
			set
			{
				if ((this._Variant2TypeID != value))
				{
					this.OnVariant2TypeIDChanging(value);
					this.SendPropertyChanging();
					this._Variant2TypeID = value;
					this.SendPropertyChanged("Variant2TypeID");
					this.OnVariant2TypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreVariantTypeOptions")]
	public partial class StoreVariantTypeOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _VariantOptionID;
		
		private long _VariantTypeID;
		
		private string _Name;
		
		private int _SortOrder;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariantOptionIDChanging(long value);
    partial void OnVariantOptionIDChanged();
    partial void OnVariantTypeIDChanging(long value);
    partial void OnVariantTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreVariantTypeOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantOptionID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long VariantOptionID
		{
			get
			{
				return this._VariantOptionID;
			}
			set
			{
				if ((this._VariantOptionID != value))
				{
					this.OnVariantOptionIDChanging(value);
					this.SendPropertyChanging();
					this._VariantOptionID = value;
					this.SendPropertyChanged("VariantOptionID");
					this.OnVariantOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantTypeID", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long VariantTypeID
		{
			get
			{
				return this._VariantTypeID;
			}
			set
			{
				if ((this._VariantTypeID != value))
				{
					this.OnVariantTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VariantTypeID = value;
					this.SendPropertyChanged("VariantTypeID");
					this.OnVariantTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountNewsletters")]
	public partial class AccountNewsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountID;
		
		private long _NewsletterID;
		
		private int _Opened;
		
		private System.Nullable<System.DateTime> _FirstOpenDate;
		
		private string _ErrorMessage;
		
		private bool _IsSent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnNewsletterIDChanging(long value);
    partial void OnNewsletterIDChanged();
    partial void OnOpenedChanging(int value);
    partial void OnOpenedChanged();
    partial void OnFirstOpenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstOpenDateChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    #endregion
		
		public AccountNewsletter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsletterID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long NewsletterID
		{
			get
			{
				return this._NewsletterID;
			}
			set
			{
				if ((this._NewsletterID != value))
				{
					this.OnNewsletterIDChanging(value);
					this.SendPropertyChanging();
					this._NewsletterID = value;
					this.SendPropertyChanged("NewsletterID");
					this.OnNewsletterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opened", DbType="Int NOT NULL")]
		public int Opened
		{
			get
			{
				return this._Opened;
			}
			set
			{
				if ((this._Opened != value))
				{
					this.OnOpenedChanging(value);
					this.SendPropertyChanging();
					this._Opened = value;
					this.SendPropertyChanged("Opened");
					this.OnOpenedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstOpenDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstOpenDate
		{
			get
			{
				return this._FirstOpenDate;
			}
			set
			{
				if ((this._FirstOpenDate != value))
				{
					this.OnFirstOpenDateChanging(value);
					this.SendPropertyChanging();
					this._FirstOpenDate = value;
					this.SendPropertyChanged("FirstOpenDate");
					this.OnFirstOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(250)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsLetters")]
	public partial class NewsLetter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _NewsLetterID;
		
		private string _Subject;
		
		private string _Body;
		
		private bool _IsSent;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private string _CampaignCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsLetterIDChanging(long value);
    partial void OnNewsLetterIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnIsSentChanging(bool value);
    partial void OnIsSentChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnCampaignCodeChanging(string value);
    partial void OnCampaignCodeChanged();
    #endregion
		
		public NewsLetter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsLetterID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long NewsLetterID
		{
			get
			{
				return this._NewsLetterID;
			}
			set
			{
				if ((this._NewsLetterID != value))
				{
					this.OnNewsLetterIDChanging(value);
					this.SendPropertyChanging();
					this._NewsLetterID = value;
					this.SendPropertyChanged("NewsLetterID");
					this.OnNewsLetterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit NOT NULL")]
		public bool IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode", DbType="NVarChar(20)")]
		public string CampaignCode
		{
			get
			{
				return this._CampaignCode;
			}
			set
			{
				if ((this._CampaignCode != value))
				{
					this.OnCampaignCodeChanging(value);
					this.SendPropertyChanging();
					this._CampaignCode = value;
					this.SendPropertyChanged("CampaignCode");
					this.OnCampaignCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private int _MobileCountryID;
		
		private string _Mobile;
		
		private string _Password;
		
		private System.DateTime _BirthDate;
		
		private bool _IsMale;
		
		private bool _IsDeactivated;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileCountryIDChanging(int value);
    partial void OnMobileCountryIDChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnIsMaleChanging(bool value);
    partial void OnIsMaleChanged();
    partial void OnIsDeactivatedChanging(bool value);
    partial void OnIsDeactivatedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateDateChanging(System.DateTime value);
    partial void OnLastUpdateDateChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileCountryID", DbType="Int NOT NULL")]
		public int MobileCountryID
		{
			get
			{
				return this._MobileCountryID;
			}
			set
			{
				if ((this._MobileCountryID != value))
				{
					this.OnMobileCountryIDChanging(value);
					this.SendPropertyChanging();
					this._MobileCountryID = value;
					this.SendPropertyChanged("MobileCountryID");
					this.OnMobileCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(250)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMale", DbType="Bit NOT NULL")]
		public bool IsMale
		{
			get
			{
				return this._IsMale;
			}
			set
			{
				if ((this._IsMale != value))
				{
					this.OnIsMaleChanging(value);
					this.SendPropertyChanging();
					this._IsMale = value;
					this.SendPropertyChanged("IsMale");
					this.OnIsMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeactivated", DbType="Bit NOT NULL")]
		public bool IsDeactivated
		{
			get
			{
				return this._IsDeactivated;
			}
			set
			{
				if ((this._IsDeactivated != value))
				{
					this.OnIsDeactivatedChanging(value);
					this.SendPropertyChanging();
					this._IsDeactivated = value;
					this.SendPropertyChanged("IsDeactivated");
					this.OnIsDeactivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreShippingOptions")]
	public partial class StoreShippingOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ShippingOptionID;
		
		private string _Name;
		
		private string _TrackingUrl;
		
		private bool _IsActive;
		
		private System.Nullable<decimal> _PerOrderFlatRate;
		
		private System.Nullable<decimal> _PerItemFlatRate;
		
		private System.Nullable<decimal> _PerKGRate;
		
		private string _Instruction;
		
		private System.Data.Linq.Binary _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShippingOptionIDChanging(long value);
    partial void OnShippingOptionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrackingUrlChanging(string value);
    partial void OnTrackingUrlChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPerOrderFlatRateChanging(System.Nullable<decimal> value);
    partial void OnPerOrderFlatRateChanged();
    partial void OnPerItemFlatRateChanging(System.Nullable<decimal> value);
    partial void OnPerItemFlatRateChanged();
    partial void OnPerKGRateChanging(System.Nullable<decimal> value);
    partial void OnPerKGRateChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoreShippingOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingOptionID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ShippingOptionID
		{
			get
			{
				return this._ShippingOptionID;
			}
			set
			{
				if ((this._ShippingOptionID != value))
				{
					this.OnShippingOptionIDChanging(value);
					this.SendPropertyChanging();
					this._ShippingOptionID = value;
					this.SendPropertyChanged("ShippingOptionID");
					this.OnShippingOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingUrl", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string TrackingUrl
		{
			get
			{
				return this._TrackingUrl;
			}
			set
			{
				if ((this._TrackingUrl != value))
				{
					this.OnTrackingUrlChanging(value);
					this.SendPropertyChanging();
					this._TrackingUrl = value;
					this.SendPropertyChanged("TrackingUrl");
					this.OnTrackingUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerOrderFlatRate", DbType="SmallMoney", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PerOrderFlatRate
		{
			get
			{
				return this._PerOrderFlatRate;
			}
			set
			{
				if ((this._PerOrderFlatRate != value))
				{
					this.OnPerOrderFlatRateChanging(value);
					this.SendPropertyChanging();
					this._PerOrderFlatRate = value;
					this.SendPropertyChanged("PerOrderFlatRate");
					this.OnPerOrderFlatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerItemFlatRate", DbType="SmallMoney", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PerItemFlatRate
		{
			get
			{
				return this._PerItemFlatRate;
			}
			set
			{
				if ((this._PerItemFlatRate != value))
				{
					this.OnPerItemFlatRateChanging(value);
					this.SendPropertyChanging();
					this._PerItemFlatRate = value;
					this.SendPropertyChanged("PerItemFlatRate");
					this.OnPerItemFlatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerKGRate", DbType="SmallMoney", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PerKGRate
		{
			get
			{
				return this._PerKGRate;
			}
			set
			{
				if ((this._PerKGRate != value))
				{
					this.OnPerKGRateChanging(value);
					this.SendPropertyChanging();
					this._PerKGRate = value;
					this.SendPropertyChanged("PerKGRate");
					this.OnPerKGRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
